name: Python Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build Executables
    runs-on: ${{ matrix.config.os.name }}
    strategy:
      matrix:
        config:
          - os:
              name: ubuntu-latest
              filename: Linux
          - os:
              name: macos-latest
              filename: MacOS
          - os:
              name: windows-latest
              filename: Windows
    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.11
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install pyinstaller Pillow
        working-directory: ./
      - name: upgrade wheel
        run: |
          pip install --upgrade setuptools wheel
        working-directory: ./
      - name: Install requirements
        run: |
          pip install -r requirements.txt
        working-directory: ./
      - name: Build Pyinstaller
        shell: bash -l {0}
        run: |
          pyinstaller bilibili-buy.spec
      - uses: vimtor/action-zip@v1
        with:
          files: dist/biliTickerBuy/
          recursive: false
          dest: ${{ secrets.ReleaseZipName }}_${{ matrix.config.os.filename }}-${{github.ref_name}}.zip
      - uses: softprops/action-gh-release@v1
        with:
          files: ${{ secrets.ReleaseZipName }}_${{ matrix.config.os.filename }}-${{github.ref_name}}.zip

  #      - name: Zip the Build
  #        run: Compress-Archive -Path ./dist/main/* -DestinationPath ${{ secrets.ReleaseZipName }}_${{ github.ref_name }}.zip
  #
  #
  #      - name: Upload Release Asset
  #        uses: actions/upload-release-asset@v1
  #        env:
  #          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #        with:
  #          upload_url: ${{ steps.create_release.outputs.upload_url }}
  #          asset_path: ./${{ secrets.ReleaseZipName }}_${{ github.ref_name }}.zip
  #          asset_name: ${{ secrets.ReleaseZipName }}_${{ github.ref_name }}.zip
  #          asset_content_type: application/zip
  update_release_draft:
    permissions:
      contents: write  # for release-drafter/release-drafter to create a github release
      pull-requests: write  # for release-drafter/release-drafter to add label to PR
    runs-on: ubuntu-latest
    steps:
      - uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
